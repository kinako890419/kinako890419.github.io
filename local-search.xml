<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>112年資管所到底有沒有落榜ㄋ心得</title>
    <link href="/2023/03/23/112%E5%B9%B4%E8%B3%87%E7%AE%A1%E6%89%80%E5%88%B0%E5%BA%95%E6%9C%89%E6%B2%92%E6%9C%89%E8%90%BD%E6%A6%9C%E3%84%8B%E5%BF%83%E5%BE%97/"/>
    <url>/2023/03/23/112%E5%B9%B4%E8%B3%87%E7%AE%A1%E6%89%80%E5%88%B0%E5%BA%95%E6%9C%89%E6%B2%92%E6%9C%89%E8%90%BD%E6%A6%9C%E3%84%8B%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="112-年資管所落榜-心得"><a href="#112-年資管所落榜-心得" class="headerlink" title="112 年資管所落榜(?)心得"></a>112 年資管所落榜(?)心得</h1><blockquote><p>應該算落榜心得(雖然有學校念)，沒膽放低能卡所以放這，也有放巴哈小屋。</p></blockquote><h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><ul><li>大二轉學到中字輩資管系，系排快要 80%，修了三門研究所的課但沒人在乎。</li><li>多益大二裸考 850 分，沒有準備英文，不要學我。</li><li>資結組，有補習，非應屆重考一次。</li><li>動機的話是降低就業門檻 AKA 加薪，沒什麼特別目標，所以落榜ㄌ不要學我*2。</li></ul><h2 id="二、成績"><a href="#二、成績" class="headerlink" title="二、成績"></a>二、成績</h2><h3 id="111-年-全落榜"><a href="#111-年-全落榜" class="headerlink" title="111 年 (全落榜)"></a>111 年 (全落榜)</h3><table><thead><tr><th></th><th>計算機概論</th><th>資料結構</th><th>MIS</th><th>英文</th><th>書審</th></tr></thead><tbody><tr><td>台大</td><td>忘了</td><td>X</td><td>9 (???)</td><td>6X</td><td>沒進一階</td></tr><tr><td>清大資應</td><td>忘了</td><td></td><td></td><td>7X</td><td></td></tr><tr><td>交大(書審)</td><td></td><td></td><td></td><td></td><td>80.X 落榜</td></tr><tr><td>成大</td><td>忘了</td><td>忘了</td><td></td><td>6X</td><td></td></tr><tr><td>中央</td><td>12</td><td>68 (的樣子)</td><td>54</td><td>X</td><td></td></tr></tbody></table><h3 id="112-年"><a href="#112-年" class="headerlink" title="112 年"></a>112 年</h3><table><thead><tr><th></th><th>計算機概論</th><th>資料結構</th><th>MIS</th><th>英文</th><th>書審</th><th>結果</th></tr></thead><tbody><tr><td>台大</td><td>4X</td><td>X</td><td>34</td><td>52</td><td>口試成績 64 哈哈</td><td>落榜</td></tr><tr><td>清大資應</td><td>52</td><td>X</td><td>X</td><td>63</td><td>X</td><td>備 28</td></tr><tr><td>交大(書審)</td><td>X</td><td>X</td><td>X</td><td>X</td><td>82</td><td>落榜</td></tr><tr><td>成大</td><td>40</td><td>30</td><td>X</td><td>64</td><td>差 0.3 分進審查謝了</td><td>落榜</td></tr><tr><td>中央(有報聯招)</td><td>29</td><td>80</td><td>33</td><td>X</td><td>X</td><td>備 16</td></tr><tr><td>中山</td><td>48</td><td>75</td><td>X</td><td>X</td><td>X</td><td>備很後面</td></tr><tr><td>中興</td><td>2X</td><td>X</td><td>X</td><td>X</td><td>90</td><td>備 16</td></tr></tbody></table><h2 id="三、補習"><a href="#三、補習" class="headerlink" title="三、補習"></a>三、補習</h2><p>補了 O 碩五科函授</p><h3 id="111-年"><a href="#111-年" class="headerlink" title="111 年"></a>111 年</h3><p>從大三下開始準備，到考試的時間大約一年。準備期間得過且過，到最後一堆破事+心態炸裂所以落榜ㄏㄏ。</p><h3 id="112-年-1"><a href="#112-年-1" class="headerlink" title="112 年"></a>112 年</h3><p>改進的地方:</p><ul><li>不能只看補習班給的，近年教授學會了迴避補習班的技能。</li><li>但補習班給的是基本，要看熟。</li><li>除此之外要看個人造化平時多補充 common sense(吧)。</li><li>不用補英文(承辦人員會一直推銷)，沒用還浪費錢，除非你多益兩科加起來比人家一科來得低那可能有用。</li><li>即使每年考題畫風都可能突變還是要把考古寫熟。</li></ul><h3 id="題庫班"><a href="#題庫班" class="headerlink" title="題庫班"></a>題庫班</h3><p>111 年有補，112 年沒有。我覺得不補沒什麼差(僅限計概和資結)，但是有前提 :</p><ol><li>找到能問問題的人，例如有上過正課就能加補習班群組，或是很強又有耐心的同學。</li><li>市售考古題有錯的地方能自己勘誤(雖然說補習班會埋錯，不過題庫班老師教也不一定是對的…)。</li></ol><h2 id="四、各科準備"><a href="#四、各科準備" class="headerlink" title="四、各科準備"></a>四、各科準備</h2><h3 id="計算機概論、作業系統"><a href="#計算機概論、作業系統" class="headerlink" title="計算機概論、作業系統"></a>計算機概論、作業系統</h3><p>補習補過劉和張，除此之外有看台大計概 OCW、清大作業系統 OCW。課本有 Computer Science an Overview(翻清大考古不會再去翻書)、恐龍本中文版(學校修課用過)。有在蝦皮買封面是綠色的資管所上榜筆記，覺得滿有用的。</p><ul><li>資源<br><a href="http://ocw.aca.ntu.edu.tw/ntu-ocw/index.php/ocw/cou/101S210">計算機概論- 臺大開放式課程(NTU OpenCourseWare)</a><br><a href="https://linux.vbird.org/linux_basic_train/centos8/">Linux 基礎學習篇訓練教材- 目錄彙整</a><br><a href="http://ocw.nthu.edu.tw/ocw/index.php?page=course&cid=141&">國立清華大學開放式課程 OpenCourseWare(NTHU, OCW) - 作業系統</a><br><a href="https://speech.ee.ntu.edu.tw/~hylee/ml/2022-spring.php">Machine Learning 2022 Spring</a></li></ul><h3 id="電腦網路"><a href="#電腦網路" class="headerlink" title="電腦網路"></a>電腦網路</h3><p>補習補過林和張，林教得比較細，張的內容比較新。課本用中央網路用的那本(忘了名字&#x3D;&#x3D;)。</p><ul><li>資源 (關鍵字: 黃能富、粘添壽)<br><a href="https://www.youtube.com/playlist?list=PLS0SUwlYe8czNZ9rRVFwp-5we8oEoVN0D">【9810 黃能富教授：計算機網路概論】 - YouTube</a><br><a href="https://www.youtube.com/playlist?list=PLS0SUwlYe8cxktXNovos9xleroaWyb-z5">10920 黃能富教授計算機網路概論</a><br><a href="http://www.cs.nthu.edu.tw/~nfhuang/contents.htm">區域網路與高速網路–黃能富</a><br><a href="http://www.tsnien.idv.tw/Internet_WebBook/Internet.html">TCP&#x2F;IP 協定 與 Internet 網路</a><br><a href="http://www.tsnien.idv.tw/Security_WebBook/security.htm">資訊與網路安全技術</a> (大推)<br><a href="https://www.youtube.com/c/PowerCertAnimatedVideos/videos">PowerCert Animated Videos - YouTube</a> (大推)<br><a href="https://isp.nuu.edu.tw/p/412-1074-625.php">各類攻擊行為</a><br><a href="https://www.hypr.com/security-encyclopedia">security-encyclopedia</a></li></ul><h3 id="資料庫"><a href="#資料庫" class="headerlink" title="資料庫"></a>資料庫</h3><p>補林，雖然授課方向偏公職但看一看保險以免突然考超偏，配合聯合大學資料庫的 ppt，偶爾用 Online SQL Editor 練習。</p><p>題外話，大二遇到疫情遠距教學的時候資料庫老師直接丟杰哥的影片給我們看之後人就消失ㄌ，太神啦。</p><ul><li>資源<br><a href="http://debussy.im.nuu.edu.tw/sjchen/DataBaseMan_Final.html">資料庫系統管理講義</a><br><a href="https://www.fooish.com/sql/">SQL 教學 - SQL 語法教學 Tutorial</a><br><a href="https://www.programiz.com/sql/online-compiler/">Online SQL Editor</a></li></ul><h3 id="資料結構"><a href="#資料結構" class="headerlink" title="資料結構"></a>資料結構</h3><p>補劉，用大家都推的 ptt 筆記，除此之外有自己再做一份自己理解過後的筆記。</p><ul><li>資源<br><a href="https://www.youtube.com/results?search_query=abdul+bari">Abdul Bari 頻道</a> (大推)<br><a href="https://www.geeksforgeeks.org/">GeeksforGeeks</a></li></ul><h3 id="程式設計、系統分析與設計"><a href="#程式設計、系統分析與設計" class="headerlink" title="程式設計、系統分析與設計"></a>程式設計、系統分析與設計</h3><p>劉和張的課都有聽過，覺得差不多。如果中央考那種叫你寫一大段程式還要畫甚麼 class diagram 之類的就送他吧，但如果是考那種算時間複雜度或給一段程式教你求結果的就滿基本的要會。然後說寫程式數學不用好是騙人的&#x3D;&#x3D;。</p><p>系統分析與設計可以找課本來看，以免教授突然問你 SDLC 或是叫你畫 use case diagram 結果你不會。行有餘力可以背一下 design pattern 相關知識，雖然成大今年好像沒考我背心酸的。</p><p>然後我覺得 ChatGPT 滿好用的欸(??)。</p><h3 id="管理資訊系統"><a href="#管理資訊系統" class="headerlink" title="管理資訊系統"></a>管理資訊系統</h3><p>ㄏㄏ我沒念</p><p>我是有上課抄筆記還有把 Laudon 中譯翻過一遍啦但除此之外啥都沒做，這樣應該算沒念吧(?)</p><h2 id="五、時間安排"><a href="#五、時間安排" class="headerlink" title="五、時間安排"></a>五、時間安排</h2><p>六月開始到考前每天念 4 ~ 8 小時，大部分時間是 4(加油好嗎)。<br>資結不熟的部分我有一直反覆看(函授的好處^^)，考古題刷了 2 ~ 3 次。</p><p>扣掉確診報銷一個月還有斯普拉頓時間應該所剩無幾&#x3D;&#x3D;</p><p>考前半個月開始禁止自己打開 switch 但沒人在乎而且半個月也太短。</p><h2 id="番外-台大口試"><a href="#番外-台大口試" class="headerlink" title="(番外)台大口試"></a>(番外)台大口試</h2><ul><li>我的口才爛得跟狗屎一樣，加上我筆試後根本不覺得自己會進二階，口試後根本不覺得自己會上，所以只放題目以供參考。</li><li>有去甄 O 諮詢(免費的那種)，承辦人員說今年可能會脫口罩面試一定要化妝，結果我沒化也沒人脫口罩笑死。</li><li>我覺得平常有在化妝的就化，沒有就算了。</li></ul><h3 id="生涯關"><a href="#生涯關" class="headerlink" title="生涯關"></a>生涯關</h3><ol><li>專題做甚麼、負責甚麼工作、學到甚麼</li><li>想修甚麼課</li><li>畢業後想做甚麼工作</li><li>大學修得最好的一門課</li><li>大學做過印象最深刻的事</li><li>有沒有推甄(??????)</li><li>還有上那些學校</li><li>被教授調侃了一下(我就爛啊)</li></ol><h3 id="統計關"><a href="#統計關" class="headerlink" title="統計關"></a>統計關</h3><ol><li>二項分布是甚麼</li><li>丟硬幣機率怎麼算(之類的我忘了)</li></ol><h3 id="MIS-關"><a href="#MIS-關" class="headerlink" title="MIS 關"></a>MIS 關</h3><p>四題抽一題</p><p>我抽到 Green IT 相關的題目</p><h3 id="資料結構關"><a href="#資料結構關" class="headerlink" title="資料結構關"></a>資料結構關</h3><ol><li>何謂 Heap</li><li>有一組資料還有兩的 heap，要怎麼存放?要怎麼找出中位數?</li></ol><h2 id="考古-amp-筆記"><a href="#考古-amp-筆記" class="headerlink" title="考古&amp;筆記"></a>考古&amp;筆記</h2><p>最後不負責任的放個考古練習紀念一下，答案僅供參考。</p><ul><li><a href="https://1drv.ms/u/s!Ag2Esrw2vxSlmU8Bo3EcpqL34_bs">資管所全科 OneNote</a></li><li><a href="https://drive.google.com/file/d/18gjBui0z6keUiTduf5jVG1O-8Ipwe_WA/view?usp=sharing">106-111 中央大學計算機概論</a></li><li><a href="https://drive.google.com/file/d/1xc-nLwKUpk_KKNHIvFXaJZEeNXPW-A7q/view?usp=sharing">106-111 中央大學網學所</a> 溫馨提醒，如果沒有要考網學所卡諾圖的地方其實可以跳過。</li></ul><p>筆記我上完正課有把電子版的印下來在寫更多東西上去，所以電子檔看起來非常簡略(而且有錯字)，一樣僅供參考。</p><ul><li><a href="https://fossil-tuesday-0f5.notion.site/c7aed294eefc402198e8cc70cdd19c0b">網路筆記</a></li><li><a href="https://fossil-tuesday-0f5.notion.site/OS-67c3f9e509fb451184b8af40ea4f421e">作業系統(OS)筆記</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>資管所</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>測試用_Quick Sort 筆記</title>
    <link href="/2023/02/11/%E6%B8%AC%E8%A9%A6%E7%94%A8_Quick-Sort-%E7%AD%86%E8%A8%98/"/>
    <url>/2023/02/11/%E6%B8%AC%E8%A9%A6%E7%94%A8_Quick-Sort-%E7%AD%86%E8%A8%98/</url>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>為”Divide and Conquer”之演算法</li><li>選擇數列中的一個值作為<strong>pivot</strong>(control key)<ul><li>一般的方法拿第一個值，演算法版拿最後一個值</li></ul></li></ul><h2 id="一般做法"><a href="#一般做法" class="headerlink" title="一般做法"></a>一般做法</h2><h3 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> partition(<span class="hljs-built_in">int</span> arr<span class="hljs-literal">[]</span>, <span class="hljs-built_in">int</span> low, <span class="hljs-built_in">int</span> high)<br>&#123;<br>    <span class="hljs-built_in">int</span> i = low;<br>    <span class="hljs-built_in">int</span> j = high;<br>    <span class="hljs-built_in">int</span> pivot = arr<span class="hljs-literal">[<span class="hljs-identifier">low</span>]</span>;<br><br>    <span class="hljs-keyword">while</span> (i &lt; j) <span class="hljs-comment">// 若i與j之位置無相交</span><br>    &#123;<br>        <span class="hljs-keyword">while</span> (pivot &gt;= arr<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>)<br>            i++;<br>        <span class="hljs-keyword">while</span> (pivot &lt; arr<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>)<br>            j--;<br>        <span class="hljs-keyword">if</span> (i &lt; j)<br>            swap(arr<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>, arr<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>);<br>    &#125;<br>    swap(arr<span class="hljs-literal">[<span class="hljs-identifier">low</span>]</span>, arr<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>);<br>    return j;<br>&#125;<br><br>void quick<span class="hljs-constructor">Sort(<span class="hljs-params">int</span> <span class="hljs-params">arr</span>[], <span class="hljs-params">int</span> <span class="hljs-params">low</span>, <span class="hljs-params">int</span> <span class="hljs-params">high</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (low &lt; high)<br>    &#123;<br>        <span class="hljs-built_in">int</span> pivot = partition(arr, low, high);<br>        <span class="hljs-comment">// divide and conquer</span><br>        quick<span class="hljs-constructor">Sort(<span class="hljs-params">arr</span>, <span class="hljs-params">low</span>, <span class="hljs-params">pivot</span> - 1)</span>; <span class="hljs-comment">// pivot左側做quick sort</span><br>        quick<span class="hljs-constructor">Sort(<span class="hljs-params">arr</span>, <span class="hljs-params">pivot</span> + 1, <span class="hljs-params">high</span>)</span>; <span class="hljs-comment">// pivotu右側做quick sort</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>i 由左往右找比 pivot 大之值</li><li>j 由右往左找比 pivot 小之值</li><li>若 i 與 j 無相交，將位置 i 與位置 j 之值互換</li><li>若 i 與 j 相交，即 i&gt;j，跳出迴圈，將 pivot 與 j 互換</li></ul><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><blockquote><p>26,5,31,1,61,11,59,15,48,19 做 Quick Sort 過程為何?</p></blockquote><table><thead><tr><th>pass</th><th>Data</th></tr></thead><tbody><tr><td>initial</td><td><strong>26</strong>,5,37,1,61,11,59,15,48,19</td></tr><tr><td>1</td><td>[11,5,19,1,15],<strong>26</strong>,[59,61,48,31]</td></tr><tr><td>2</td><td>[1,5],<strong>11</strong>,[19,15],<strong>26</strong>,[59,61,48,31]</td></tr><tr><td>3</td><td><strong>1</strong>,<strong>5</strong>,<strong>11</strong>,[19,15],<strong>26</strong>,[59,61,48,31]</td></tr><tr><td>4</td><td><strong>1</strong>,<strong>5</strong>,<strong>11</strong>,<strong>15</strong>,<strong>19</strong>,<strong>26</strong>,[59,61,48,31]</td></tr><tr><td>5</td><td><strong>1</strong>,<strong>5</strong>,<strong>11</strong>,<strong>15</strong>,<strong>19</strong>,<strong>26</strong>,[48,31],<strong>59</strong>,[61]</td></tr><tr><td>6</td><td><strong>1</strong>,<strong>5</strong>,<strong>11</strong>,<strong>15</strong>,<strong>19</strong>,<strong>26</strong>,[48,31],<strong>59</strong>,<strong>61</strong></td></tr><tr><td>7</td><td><strong>1</strong>,<strong>5</strong>,<strong>11</strong>,<strong>15</strong>,<strong>19</strong>,<strong>26</strong>,<strong>48</strong>,<strong>31</strong>,<strong>59</strong>,<strong>61</strong></td></tr></tbody></table><p>註: 粗體 &#x3D; sorted, [] &#x3D; unsorted</p><h3 id="時間複雜度"><a href="#時間複雜度" class="headerlink" title="時間複雜度"></a>時間複雜度</h3><ul><li><strong>Best Case</strong>: pass 1 後 pivot 插在數列的正中間 &#x3D;&gt; <span style= "background-color:yellow" > O(log n) </span><ul><li>T(n) &#x3D; T(n&#x2F;2) + T(n&#x2F;2)</li></ul></li><li><strong>Worst Case</strong>: 欲進行 Quick Sort 之 data 已經 sorted，不論由大到小或由小到大排序&#x3D;&gt; <span style= "background-color:yellow" > O($n^2$) </span></li></ul><h3 id="Worst-Case-的改善方法-—-Middle-of-Three"><a href="#Worst-Case-的改善方法-—-Middle-of-Three" class="headerlink" title="Worst Case 的改善方法 — Middle of Three"></a>Worst Case 的改善方法 — <span style= "background-color:aqua" >Middle of Three</span></h3><ul><li>使 pivot 不為數列中的最大或最小值</li><li>方法<ul><li>比較 A[low]、A[(low+high)&#x2F;2] (數列的中央)、A[high]大小，找出中間值與 A[low]互換，將新的 A[low]作為 pivot</li></ul></li></ul><h2 id="演算法版"><a href="#演算法版" class="headerlink" title="演算法版"></a>演算法版</h2><ul><li>將數列的<strong>最後一個值</strong>作為 pivot</li></ul><h3 id="partition-程式"><a href="#partition-程式" class="headerlink" title="partition 程式"></a><span style= "background-color:yellow" >partition 程式</span></h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs inform7">partition (arr<span class="hljs-comment">[]</span>, low, high)<br>&#123;<br>    pivot = arr<span class="hljs-comment">[high]</span>;<br>    i = (low – 1);<br>    for (j = low; j &lt;= high- 1; j++)&#123;<br>        if (arr<span class="hljs-comment">[j]</span> &lt; pivot)&#123;<br>            i++;<br>            swap(arr<span class="hljs-comment">[i]</span>,arr<span class="hljs-comment">[j]</span>)<br>        &#125;<br>    &#125;<br><br>    swap(arr<span class="hljs-comment">[i + 1]</span>,arr<span class="hljs-comment">[high]</span>) // i的下一個值和pivot互換<br>    return (i + 1) // return pivot<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="時間複雜度-1"><a href="#時間複雜度-1" class="headerlink" title="時間複雜度"></a>時間複雜度</h3><ul><li><strong>Best Case</strong>: <span style= "background-color:yellow" > O(n log n) </span><ul><li>T(n) &#x3D; 2T(n) + c$*$n</li></ul></li><li><strong>Average Case</strong>: <span style= "background-color:yellow" > O(n log n) </span></li><li><strong>Worst Case</strong>: 欲進行 Quick Sort 之 data 已經 sorted，不論由大到小或由小到大排序，或<strong>資料全部相同</strong>&#x3D;&gt; <span style= "background-color:yellow" > O($n^2$) </span></li></ul><h2 id="使用-partition-概念找出未排序陣列中第-k-小之值"><a href="#使用-partition-概念找出未排序陣列中第-k-小之值" class="headerlink" title="使用 partition 概念找出未排序陣列中第 k 小之值"></a>使用 partition 概念找出未排序陣列中第 k 小之值</h2><h3 id="程式-1"><a href="#程式-1" class="headerlink" title="程式"></a>程式</h3><ul><li>直覺法為先做排序後尋找，極限為 O(n logn)</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-built_in">int</span> partition(<span class="hljs-built_in">int</span> arr<span class="hljs-literal">[]</span>, <span class="hljs-built_in">int</span> l, <span class="hljs-built_in">int</span> r);<br><br><span class="hljs-built_in">int</span> kth<span class="hljs-constructor">Smallest(<span class="hljs-params">int</span> <span class="hljs-params">arr</span>[], <span class="hljs-params">int</span> <span class="hljs-params">l</span>, <span class="hljs-params">int</span> <span class="hljs-params">r</span>, <span class="hljs-params">int</span> K)</span> <span class="hljs-comment">// 找陣列中大小第Kth之值</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (K &gt; <span class="hljs-number">0</span><span class="hljs-operator"> &amp;&amp; </span>K &lt;= r - l + <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">// K在陣列範圍之內</span><br>        <span class="hljs-built_in">int</span> pos = partition(arr, l, r); <span class="hljs-comment">// pos = pivot的位置</span><br><br>        <span class="hljs-keyword">if</span> (pos - l<span class="hljs-operator"> == </span>K - <span class="hljs-number">1</span>)&#123; <span class="hljs-comment">// 若pivot的位置等於K，pivot即陣列中大小第Kth之值</span><br>            return arr<span class="hljs-literal">[<span class="hljs-identifier">pos</span>]</span>;<br>        &#125;<br>        <span class="hljs-comment">// 若pivot位置大於或小於K，則往左半或右半邊做partition (遞迴)</span><br>        <span class="hljs-keyword">if</span> (pos - l &gt; K - <span class="hljs-number">1</span>) &#123;<br>            return kth<span class="hljs-constructor">Smallest(<span class="hljs-params">arr</span>, <span class="hljs-params">l</span>, <span class="hljs-params">pos</span> - 1, K)</span>;<br>        &#125;<br>        return kth<span class="hljs-constructor">Smallest(<span class="hljs-params">arr</span>, <span class="hljs-params">pos</span> + 1, <span class="hljs-params">r</span>, K - <span class="hljs-params">pos</span> + <span class="hljs-params">l</span> - 1)</span>;<br>    &#125;<br>    return INT_MAX;<br>&#125;<br><br><span class="hljs-built_in">int</span> partition(<span class="hljs-built_in">int</span> arr<span class="hljs-literal">[]</span>, <span class="hljs-built_in">int</span> l, <span class="hljs-built_in">int</span> r)<br>&#123;<br>    <span class="hljs-built_in">int</span> x = arr<span class="hljs-literal">[<span class="hljs-identifier">r</span>]</span>, i = l;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = l; j &lt;= r - <span class="hljs-number">1</span>; j++) &#123;<br>        <span class="hljs-keyword">if</span> (arr<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span> &lt;= x) &#123;<br>            swap(&amp;arr<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>, &amp;arr<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>);<br>            i++;<br>        &#125;<br>    &#125;<br><br>    swap(&amp;arr<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>, &amp;arr<span class="hljs-literal">[<span class="hljs-identifier">r</span>]</span>);<br>    return i;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="時間複雜度-2"><a href="#時間複雜度-2" class="headerlink" title="時間複雜度"></a>時間複雜度</h3><ul><li><strong>Best Case</strong>: <span style= "background-color:yellow" > O(n) </span><ul><li>T(n) &#x3D; T(n&#x2F;2) + c$*$n</li></ul></li><li><strong>Average Case</strong>: 在不失一般性的情況下<span style= "background-color:yellow" > O(n) </span></li><li><strong>Worst Case</strong>: <span style= "background-color:yellow" > O($n^2$) </span></li></ul><hr><p><a href="https://www.geeksforgeeks.org/quick-sort/">source1</a><br><a href="https://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/">source2</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>資料結構</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/11/hello-world/"/>
    <url>/2023/02/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
